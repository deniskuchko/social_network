{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","Input","FormControl","Textarea","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","isDisabledSave","onSubmit","disabled","className","style","formSummaryError","createFields","type","Object","keys","contacts","map","key","s","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitls","contactValue","Contacts","contact","ProfileInfo","savePhoto","isPhotoSetup","saveProfile","Preloader","descriptionBlock","imageBlock","src","photos","large","userPhoto","mainPhoto","target","files","informPerson","initialValues","formData","then","Post","item","message","likesCount","maxLengthCreator10","maxLengthCreator","MyPosts","memo","postsElements","posts","p","id","postsBlock","values","addPost","newPostText","AddNewPostForm","Field","name","component","validate","required","placeholder","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","content","compose","authorisedUserId","userId","getUserProfile","getStatus","withRouter","usersId","match","params","history","push","refreshProfile"],"mappings":"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","file":"static/js/3.a6cad5e5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3I8h4\",\"imageBlock\":\"ProfileInfo_imageBlock__2eyIR\",\"informPerson\":\"ProfileInfo_informPerson__3Kldr\",\"mainPhoto\":\"ProfileInfo_mainPhoto__GtAFt\",\"contact\":\"ProfileInfo_contact__30Jao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3Lg7-\",\"posts\":\"MyPosts_posts__2yL5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1LpBR\"};","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activatedEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivatedEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <b>Status: </b>\r\n          <span onDoubleClick={activatedEditMode}>{props.status || \"---\"}</span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivatedEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport { change, reduxForm } from \"redux-form\";\r\nimport { setStatus } from \"../../../redux/profile-reduser\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport {\r\n  createFields,\r\n  FormControl,\r\n} from \"../../common/FormsControls/FormsControls\";\r\n\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nlet Input = FormControl(\"input\");\r\nlet Textarea = FormControl(\"textarea\");\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error, isDisabledSave }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button disabled={isDisabledSave}>save</button>\r\n      </div>\r\n      <div>\r\n        {error && <div className={style.formSummaryError}>{error}</div>}\r\n      </div>\r\n      <div>\r\n        <b>Full name:</b>\r\n        {createFields(\"Full name\", \"fullName\", Input, [])}\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <b>Looking for a job:</b>\r\n          {createFields(\"\", \"lookingForAJob\", Input, [], { type: \"checkbox\" })}\r\n        </div>\r\n\r\n        <div>\r\n          <b>My professional skils:</b>\r\n          {createFields(\r\n            \"My professional skils\",\r\n            \"lookingForAJobDescription\",\r\n            Textarea,\r\n            []\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <b>About me: </b>\r\n          {createFields(\"About me\", \"aboutMe\", Textarea, [])}\r\n        </div>\r\n        <div>\r\n          <b>Contacts: </b>\r\n          {Object.keys(profile.contacts).map((key) => {\r\n            return (\r\n              <div key={key} className={s.contacts}>\r\n                <b>\r\n                  {key}: {createFields(key, \"contacts.\" + key, Textarea, [])}\r\n                </b>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\nexport default ProfileDataFormReduxForm;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport { useState } from \"react\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  isOwner,\r\n  updateStatus,\r\n  savePhoto,\r\n  isPhotoSetup,\r\n  saveProfile,\r\n  isDisabledSave,\r\n}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files) {\r\n      savePhoto(e.target.files[0]);\r\n      if (!e.target.files[0]) {\r\n        return <Preloader />;\r\n      }\r\n    }\r\n  };\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  if (isPhotoSetup) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div className={s.descriptionBlock}>\r\n      <div className={s.imageBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n      </div>\r\n      <div className={s.informPerson}>\r\n        {editMode ? (\r\n          <ProfileDataFormReduxForm\r\n            initialValues={profile}\r\n            onSubmit={onSubmit}\r\n            profile={profile}\r\n            isDisabledSave={isDisabledSave}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n            goToEditMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n          />\r\n        )}\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <b>Full name: </b> {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <b>Looking for a job: </b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob && (\r\n          <div>\r\n            <b>My professional skils: </b> {profile.lookingForAJobDescription}\r\n          </div>\r\n        )}\r\n        <div>\r\n          <b>About me: </b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n          <b>Contacts: </b>\r\n          {Object.keys(profile.contacts).map((key) => {\r\n            return (\r\n              <Contacts\r\n                key={key}\r\n                contactTitls={key}\r\n                contactValue={profile.contacts[key]}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contacts = ({ contactTitls, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{contactTitls}: </b>\r\n      {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://teleprogramma.pro/wp-content/uploads/2016/01/25b2916b5c49db617f52fa5ea48efee7-423.jpg\" />\r\n\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { FormControl } from \"../../common/FormsControls/FormsControls\";\r\n\r\nlet Textarea = FormControl(\"textarea\");\r\nconst maxLengthCreator10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n\r\n      <AddNewPostForm onSubmit={onAddPost} />\r\n\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          validate={[required, maxLengthCreator10]}\r\n          placeholder=\"Enter post\"\r\n        ></Field>\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nAddNewPostForm = reduxForm({\r\n  form: \"newAddPost\",\r\n})(AddNewPostForm);\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        isOwner={props.isOwner}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto}\r\n        isPhotoSetup={props.isPhotoSetup}\r\n        saveProfile={props.saveProfile}\r\n        isDisabledSave={props.isDisabledSave}\r\n      />\r\n\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../../redux/profile-reduser\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst ProfileContainer = (props) => {\r\n  const refreshProfile = () => {\r\n    let usersId = props.match.params.usersId;\r\n    if (!usersId) {\r\n      usersId = props.authorisedUserId;\r\n      if (!usersId) {\r\n        return props.history.push(\"/login\");\r\n      }\r\n    }\r\n    props.getUserProfile(usersId);\r\n    props.getStatus(usersId);\r\n  };\r\n\r\n  React.useEffect(() => refreshProfile(), [props.match.params.usersId]);\r\n\r\n  return (\r\n    <Profile\r\n      {...props}\r\n      isOwner={!props.match.params.usersId}\r\n      profile={props.profile}\r\n      status={props.status}\r\n      updateStatus={props.updateStatus}\r\n      savePhoto={props.savePhoto}\r\n      isPhotoSetup={props.isPhotoSetup}\r\n      saveProfile={props.saveProfile}\r\n      isDisabledSave={props.isDisabledSave}\r\n    />\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorisedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n  isPhotoSetup: state.profilePage.isPhotoSetup,\r\n  isDisabledSave: state.profilePage.isDisabledSave,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}