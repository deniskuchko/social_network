{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","imageBlock","src","photos","large","fullName","Preloader","Post","item","message","likesCount","Textarea","FormControl","maxLengthCreator10","maxLengthCreator","MyPosts","memo","postsElements","posts","map","p","key","id","postsBlock","onSubmit","values","addPost","newPostText","AddNewPostForm","handleSubmit","Field","name","component","validate","required","placeholder","reduxForm","form","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","content","ProfileContainer","usersId","match","params","authorisedUserId","history","push","getUserProfile","getStatus","compose","userId","withRouter"],"mappings":"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","file":"static/js/3.c11c905d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3I8h4\",\"imageBlock\":\"ProfileInfo_imageBlock__2eyIR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3Lg7-\",\"posts\":\"MyPosts_posts__2yL5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1LpBR\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n\r\n  activeteEditMode = () => {\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n  };\r\n  deactiveteEditMode = () => {\r\n    this.setState({\r\n      editMode: false,\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span onDoubleClick={this.activeteEditMode}>\r\n              {this.props.status || \"---\"}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input\r\n              onChange={this.onStatusChange}\r\n              autoFocus={true}\r\n              onBlur={this.deactiveteEditMode}\r\n              value={this.state.status}\r\n            />\r\n          </div>\r\n        )}\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n  const activatedEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivatedEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activatedEditMode}>{props.status || \"---\"}</span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivatedEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.imageBlock}>\r\n        <img src=\"https://bipbap.ru/wp-content/uploads/2019/07/59b21ebebd0470cb6d8b4570.jpg\" />\r\n      </div>\r\n      <div>\r\n        <img src={`${profile.photos.large}`} />\r\n      </div>\r\n      <div>\r\n        <h3>{`Full Name: ${profile.fullName}`}</h3>\r\n      </div>\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://teleprogramma.pro/wp-content/uploads/2016/01/25b2916b5c49db617f52fa5ea48efee7-423.jpg\" />\r\n\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { FormControl } from \"../../common/FormsControls/FormsControls\";\r\n\r\nlet Textarea = FormControl(\"textarea\");\r\nconst maxLengthCreator10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n\r\n      <AddNewPostForm onSubmit={onAddPost} />\r\n\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          validate={[required, maxLengthCreator10]}\r\n          placeholder=\"Enter post\"\r\n        ></Field>\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nAddNewPostForm = reduxForm({\r\n  form: \"newAddPost\",\r\n})(AddNewPostForm);\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profile-reduser\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    debugger;\r\n    let usersId = this.props.match.params.usersId;\r\n    if (!usersId) {\r\n      usersId = this.props.authorisedUserId;\r\n      if (!usersId) {\r\n        return this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(usersId);\r\n    this.props.getStatus(usersId);\r\n  }\r\n  render() {\r\n    /* if (!this.props.isAuth) {\r\n      return <Redirect to={\"/login\"} />;\r\n    } */\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorisedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}